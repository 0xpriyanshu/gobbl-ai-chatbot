{% comment %}
  @name Gobbl Chat Widget
  @description Adds the Gobbl AI Chatbot to your store with preâ€‘authentication and logs user data.
{% endcomment %}

{% if customer %}
  {% assign auth_token = customer.auth_token %}
  {% assign customer_data = customer | json %}
{% else %}
  {% assign auth_token = "" %}
  {% assign customer_data = "{}" %}
{% endif %}

<div id="gobbl-chat-container" data-shop-domain="{{ shop.permanent_domain }}"></div>

{% schema %}
{
  "name": "Gobbl AI Chatbot",
  "target": "body",
  "settings": [
    {
      "type": "text",
      "id": "seller_id",
      "label": "Seller ID (API Key)",
      "info": "Enter your Gobbl Seller ID that was provided at the end of the onboarding process. When editing this section in the theme editor (design mode), a clickable link will appear on the left that directs you to the customization page. If a seller ID is set, the link opens https://onboarding.gobbl.ai/?sellerID=yourID; otherwise it opens https://onboarding.gobbl.ai/onboarding"
    },
    {
      "type": "color",
      "id": "chat_icon_color",
      "label": "Chat Icon Color",
      "default": "#fb923c"
    },
    {
      "type": "range",
      "id": "chat_widget_width",
      "label": "Chat Widget Width (Desktop)",
      "min": 300,
      "max": 600,
      "step": 50,
      "default": 400
    },
    {
      "type": "range",
      "id": "chat_widget_height",
      "label": "Chat Widget Height (Desktop)",
      "min": 400,
      "max": 800,
      "step": 50,
      "default": 600
    }
  ]
}
{% endschema %}

<style>
  #chatIcon {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 60px;
    height: 60px;
    background: {{ block.settings.chat_icon_color }};
    border-radius: 50%;
    cursor: pointer;
    z-index: 9998;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(0,0,0,0.25);
    transition: all 0.3s ease;
  }

  #chatbotIframe {
    position: fixed;
    border: none;
    border-radius: 12px;
    z-index: 999999;
    display: none;
    box-shadow: 0 5px 25px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
  }

  #chatbotCloseBtn {
    position: fixed;
    width: 36px;
    height: 36px;
    background: {{ block.settings.chat_icon_color }};
    border-radius: 50%;
    cursor: pointer;
    z-index: 1000000;
    display: none;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    font-weight: bold;
    color: #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
  }

  /* Mobile styles */
  @media screen and (max-width: 767px) {
    #chatbotIframe.mobile-open {
      width: 100% !important;
      height: 100% !important;
      bottom: 0 !important;
      right: 0 !important;
      border-radius: 0 !important;
    }
    #chatbotCloseBtn.mobile-visible {
      top: 15px !important;
      right: 15px !important;
      left: auto !important;
      transform: none !important;
      position: fixed !important;
      z-index: 1000000 !important;
    }
  }

  /* Design mode customization link styling (only visible in the editor) */
  #customizeChatLink {
    position: fixed;
    top: 50px;
    left: 0;
    background: #fff;
    border: 1px solid #ccc;
    padding: 8px 12px;
    font-size: 14px;
    z-index: 1000001;
    text-decoration: none;
    color: #333;
  }
</style>

<script>
(function(){
  var sellerId = "{{ block.settings.seller_id }}";
  var isMobile = window.innerWidth <= 767;
  
  // Debug info (hidden in production)
  var debugInfo = document.createElement('div');
  debugInfo.id = 'gobbl-debug-info';
  debugInfo.style.display = 'none';
  debugInfo.innerHTML = "Shop: {{ shop.permanent_domain }} | Seller ID: " + (sellerId || "NOT CONFIGURED");
  document.body.appendChild(debugInfo);

  // Create chat icon element
  var chatIcon = document.createElement('div');
  chatIcon.id = 'chatIcon';
  chatIcon.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="#fff"><path d="M12 3C7.59 3 4 6.59 4 11c0 1.74.57 3.35 1.53 4.65L4 21l5.35-1.53A7.938 7.938 0 0 0 12 19c4.41 0 8-3.59 8-8s-3.59-8-8-8z"/></svg>';

  // Build the iframe URL
  var iframeUrl = 'https://curatehome.vercel.app?shop={{ shop.permanent_domain }}';
  if (sellerId) {
    iframeUrl += '&sellerId=' + encodeURIComponent(sellerId);
  }
  iframeUrl += '&debug=true';
  {% if auth_token != "" %}
    iframeUrl += '&auth_token={{ auth_token }}';
  {% endif %}

  // Create the iframe for the chatbot window
  var iframe = document.createElement('iframe');
  iframe.id = 'chatbotIframe';
  iframe.src = iframeUrl;
  
  // Set initial iframe position (different for mobile and desktop)
  if (isMobile) {
    iframe.style.width = '100%';
    iframe.style.height = '100%';
    iframe.style.bottom = '0';
    iframe.style.right = '0';
    iframe.style.borderRadius = '0';
  } else {
    iframe.style.width = '{{ block.settings.chat_widget_width }}px';
    iframe.style.height = '{{ block.settings.chat_widget_height }}px';
    iframe.style.bottom = '80px';
    iframe.style.right = '20px';
  }

  // Create the chatbot close button
  var closeBtn = document.createElement('div');
  closeBtn.id = 'chatbotCloseBtn';
  closeBtn.innerHTML = '&#10005;';
  
  // Set initial close button position based on device
  if (isMobile) {
    closeBtn.style.top = '15px';
    closeBtn.style.right = '15px';
    closeBtn.style.backgroundColor = '{{ block.settings.chat_icon_color }}';
  } else {
    closeBtn.style.top = '10px';
    closeBtn.style.right = '10px';
  }

  // Toggle display of chatbot iframe when clicking the chat icon
  chatIcon.addEventListener('click', function(){
    var isHidden = iframe.style.display === 'none';
    iframe.style.display = isHidden ? 'block' : 'none';
    closeBtn.style.display = isHidden ? 'flex' : 'none';
    if (isMobile && isHidden) {
      iframe.classList.add('mobile-open');
      closeBtn.classList.add('mobile-visible');
    }
  });

  // Close the chatbot when the close button is clicked
  closeBtn.addEventListener('click', function(){
    iframe.style.display = 'none';
    closeBtn.style.display = 'none';
    if (isMobile) {
      iframe.classList.remove('mobile-open');
      closeBtn.classList.remove('mobile-visible');
    }
  });

  // Update positions on window resize
  window.addEventListener('resize', function() {
    var wasMobile = isMobile;
    isMobile = window.innerWidth <= 767;
    if (wasMobile !== isMobile) {
      if (isMobile) {
        if (iframe.style.display !== 'none') {
          iframe.classList.add('mobile-open');
          closeBtn.classList.add('mobile-visible');
          closeBtn.style.top = '15px';
          closeBtn.style.right = '15px';
          closeBtn.style.left = 'auto';
          closeBtn.style.transform = 'none';
        }
      } else {
        iframe.classList.remove('mobile-open');
        closeBtn.classList.remove('mobile-visible');
        iframe.style.width = '{{ block.settings.chat_widget_width }}px';
        iframe.style.height = '{{ block.settings.chat_widget_height }}px';
        iframe.style.bottom = '80px';
        iframe.style.right = '20px';
        closeBtn.style.top = '10px';
        closeBtn.style.right = '10px';
        closeBtn.style.left = 'auto';
        closeBtn.style.transform = 'none';
      }
    }
  });

  // Append the chat elements to the page
  document.body.appendChild(chatIcon);
  document.body.appendChild(iframe);
  document.body.appendChild(closeBtn);

  // When the iframe loads, post initial data to it
  iframe.addEventListener('load', function(){
    var messageData = {
      shop: '{{ shop.permanent_domain }}',
      sellerId: sellerId
    };
    {% if auth_token != "" %}
      messageData.auth_token = '{{ auth_token }}';
      messageData.customer = {{ customer_data | json }};
    {% endif %}
    iframe.contentWindow.postMessage(messageData, 'https://curatehome.vercel.app');
  });

  // If in design mode, add a clickable customization link on the left side.
  if (window.Shopify && Shopify.designMode) {
    var customizeLink = document.createElement('a');
    // Dynamically build the URL based on whether sellerId is set.
    if (sellerId && sellerId.trim()) {
      customizeLink.href = "https://onboarding.gobbl.ai/?sellerID=" + encodeURIComponent(sellerId);
    } else {
      customizeLink.href = "https://onboarding.gobbl.ai/onboarding";
    }
    customizeLink.textContent = "Customize Chatbot";
    customizeLink.id = "customizeChatLink";
    // Optionally, open in a new tab if desired:
    customizeLink.target = "_blank";
    document.body.appendChild(customizeLink);
  }
})();
</script>

<script>
window.addEventListener("message", async (event) => {
  const { type, payload } = event.data || {};

  if (type === "ADD_TO_CART") {
    try {
      const res = await fetch("/cart/add.js", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json"
        },
        body: JSON.stringify({
          id: payload.id,
          quantity: payload.quantity || 1
        })
      });

      const added = await res.json();
      event.source.postMessage({ type: "CART_UPDATED", payload: added }, event.origin);

      const cartRes = await fetch("/cart.js");
      const cart = await cartRes.json();
      const count = cart.item_count;
      const el = document.querySelector(".cart-count");
      if (el) {
        el.textContent = count;
        el.classList.add("visible");
      }

      document.dispatchEvent(new Event("shopify:cart:updated"));
      document.dispatchEvent(new CustomEvent("cart:refresh"));

      if (window.Shopify && Shopify.theme && Shopify.theme.cartDrawer && typeof Shopify.theme.cartDrawer.fetchCart === 'function') {
        Shopify.theme.cartDrawer.fetchCart();
      }
    } catch (err) {
      event.source.postMessage({ type: "CART_ERROR", payload: { message: err.message } }, event.origin);
    }
  }
});
</script>
